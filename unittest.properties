# Folder, where other files and subfolders will be stored
app.home=/var/tmp/xmlconv

# Application host name
app.host=converters.eionet.europa.eu

# Other applications urls
config.gdem.url=http://localhost:8080
config.dd.url=http://dd.eionet.europa.eu
config.dd.rpc.url=http://dd.eionet.europa.eu/rpcrouter
config.cr.sparql.endpoint=http://cr.eionet.europa.eu/sparql
config.cdr.url=http://cdr.eionet.europa.eu

# Database parameters
config.db.jdbcurl=jdbc:mysql://localhost:3306/xmlconv?autoReconnect=true&characterEncoding=UTF-8&emptyStringsConvertToZero=false&jdbcCompliantTruncation=false
config.db.jdbcurl.encoded=jdbc:mysql://localhost:3306/xmlconv?autoReconnect=true&amp;characterEncoding=UTF-8&amp;emptyStringsConvertToZero=false&amp;jdbcCompliantTruncation=false
config.db.driver=com.mysql.jdbc.Driver
config.db.user=xmlconv_user
config.db.password=pass_pass

# Database parameters for unit tests
config.test.db.jdbcurl=jdbc:mysql://${docker.host.address}:53336/xmlconv\
    ?autoReconnect=true\
    &createDatabaseIfNotExist=true\
    &server.initialize-user=true\
    &useUnicode=true\
    &characterEncoding=UTF-8\
    &emptyStringsConvertToZero=false\
    &jdbcCompliantTruncation=false
config.test.db.driver=com.mysql.jdbc.Driver
config.test.db.user=testuser
config.test.db.password=testpassword

basexserver.host=localhost
basexserver.port=1984
basexserver.user=admin
basexserver.password=admin

testbasexserver.host=localhost
testbasexserver.port=32774
testbasexserver.user=admin
testbasexserver.password=admin

#Threshold for long running jobs in ms
env.long.running.jobs.threshold=3600000

# UNS-related properties
#########################

# XML-RPC server URL for UNS subscription
env.uns.xml.rpc.server.url=http://uns.eionet.europa.eu/rpcrouter
#Channel name for UNS subscription method
env.uns.channel.name=123456789
# UNS subscriptions URL
env.uns.subscriptions.url=http://uns.eionet.europa.eu/subscriptions/subscriptions.jsf
# username for UNS subscriptions
env.uns.username=username
# password for UNS subscriptions
env.uns.password=password
# UNS xmlrpc function that is called for making subscription
env.uns.make.subsription.function=UNSService.makeSubscription
# UNS xmlrpc function that is called for sending notifications
env.uns.send.notification.function=UNSService.sendNotification
# If present and "true", this flag disables UNS event sending. In all other cases, sending is enabled.
# On Windows platform sending is disabled by default, unless this property is present and explicitly set to "false".
env.uns.isDisabled=${env.uns.isDisabled}

# Predicate for long running jobs
env.uns.long.running.jobs.predicate=${config.gdem.url}/jobs#long_running_jobs
# Event type predicate for UNS subscription method
env.uns.eventtype.predicate=${config.gdem.url}/jobs#event_type
# UNS event namespace
env.uns.events-namespace=${config.gdem.url}/events/
#Property for  uns url
env.uns.url=
#sendNotification method url
uns.sendNotification.method=/v2/uns/event/legacy/sendNotification/
#Credentials for uns rest api calls
uns.rest.username=
uns.rest.password=

# TEST uns properties
test.uns.xml.rpc.server.url=http://test.tripledev.ee/uns/rpcrouter
test.uns.channel.name=987654321

#rancher api url
env.rancher.api.url=
#username used for rancher api calls
env.rancher.api.accessKey=
#password used for rancher api calls
env.rancher.api.secretKey=
#jobExecutor imagUuid
env.rancher.api.jobExecutor.imageUuid=
#jobExecutor stack id
env.rancher.api.jobExecutor.stackId=
#service memory in bytes
env.rancher.api.service.memory=
#service memory reservation in bytes
env.rancher.api.service.memoryReservation=
#service scale number
env.rancher.api.jobExecutor.service.scale=

#RabbitMQ configuration
env.rabbitmq.enabled=

env.rabbitmq.host=
env.rabbitmq.port=
env.rabbitmq.username=
env.rabbitmq.password=
env.rabbitmq.workers.jobs.queue=workers-jobs-queue
env.rabbitmq.workers.jobs.results.queue=workers-jobs-results-queue
env.rabbitmq.main.xmlconv.jobs.exchange=main-xmlconv-jobs-exchange
env.rabbitmq.main.workers.exchange=main-workers-exchange
env.rabbitmq.jobs.routingkey=xmlconv-job
env.rabbitmq.jobs.results.routingkey=xmlconv-job-result

#RabbitMQ configuration for Heavy Workers
env.rabbitmq.heavy.workers.jobs.queue=workers-heavy-jobs-queue
env.rabbitmq.main.xmlconv.heavy.jobs.exchange=main-xmlconv-heavy-jobs-exchange
env.rabbitmq.heavy.jobs.routingkey=xmlconv-job-heavy

#Dead Letter queue properties
env.rabbitmq.dead.letter.queue=workers-dead-letter-queue
env.rabbitmq.dead.letter.exchange=workers-dead-letter-exchange
env.rabbitmq.dead.letter.routingKey=workers-dead-letter-routing-key
