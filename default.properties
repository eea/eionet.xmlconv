# Folder, where other files and subfolders will be stored
app.home=/var/tmp/xmlconv

# Application host name
app.host=converters.eionet.europa.eu

# Other applications urls
#one of the uses of this property is in HttpFileManager.getSourceUrlWithTicket method where we create
# the source url with an authentication method. This is used when there is no load balancer
config.gdem.url=https://converters.eionet.europa.eu
config.dd.url=http://dd.eionet.europa.eu
config.dd.rpc.url=https://dd.eionet.europa.eu/rpcrouter
config.cr.sparql.endpoint=https://cr.eionet.europa.eu/sparql
config.cdr.url=https://cdr.eionet.europa.eu

# Database parameters
config.db.jdbcurl=jdbc:mysql://localhost:3306/xmlconv?autoReconnect=true&characterEncoding=UTF-8&emptyStringsConvertToZero=false&jdbcCompliantTruncation=false
config.db.jdbcurl.encoded=jdbc:mysql://localhost:3306/xmlconv?autoReconnect=true&amp;characterEncoding=UTF-8&amp;emptyStringsConvertToZero=false&amp;jdbcCompliantTruncation=false
config.db.driver=com.mysql.jdbc.Driver
config.db.user=xmlconv_user
config.db.password=pass_pass

quartz.db.url=jdbc:mysql://localhost:3306/quartz?autoReconnect=true&createDatabaseIfNotExist=true
quartz.db.user=quartz_user
quartz.db.pwd=quartz_pass

# Database parameters for unit tests
config.test.db.jdbcurl=jdbc:mysql://localhost:3336/xmlconv\
    ?autoReconnect=true\
    &createDatabaseIfNotExist=true\
    &server.initialize-user=true\
    &useUnicode=true\
    &characterEncoding=UTF-8\
    &emptyStringsConvertToZero=false\
    &jdbcCompliantTruncation=false
config.test.db.driver=com.mysql.jdbc.Driver
config.test.db.user=testuser
config.test.db.password=testpassword
config.test.httpd.url=https://localhost:8443/


config.cache.temp.dir=/opt/cache
config.cache.http.expiryinterval=120
config.cache.http.size=2000

#JWT
jwt.secret=top-secret
jwt.issuer=issuer
jwt.audience=eea
jwt.header=Authorization
jwt.header.schema=Bearer

#Scheduler
config.heavy.threshold=10485760

# SSO Configuration
config.sso.url=https://sso.eionet.europa.eu/

#Threshold for long running jobs in ms
env.long.running.jobs.threshold=3600000

#Timeout in milliseconds for on demand jobs to get not empty html file
env.onDemand.waitForEmptyFile.timeout.ms=2000
#Maximum ms for which we will wait to retrieve not empty html file
env.onDemand.waitForEmptyFile.max.ms=10000

# UNS-related properties
#########################

# XML-RPC server URL for UNS subscription
env.uns.xml.rpc.server.url=http://uns.eionet.europa.eu/rpcrouter
#Channel name for UNS subscription method
env.uns.channel.name=123456789
# UNS subscriptions URL
env.uns.subscriptions.url=http://uns.eionet.europa.eu/subscriptions/subscriptions.jsf
# username for UNS subscriptions
env.uns.username=username
# password for UNS subscriptions
env.uns.password=password
# UNS xmlrpc function that is called for making subscription
env.uns.make.subsription.function=UNSService.makeSubscription
# UNS xmlrpc function that is called for sending notifications
env.uns.send.notification.function=UNSService.sendNotification
# If present and "true", this flag disables UNS event sending. In all other cases, sending is enabled.
# On Windows platform sending is disabled by default, unless this property is present and explicitly set to "false".
env.uns.isDisabled=${env.uns.isDisabled}

# Predicate for long running jobs
env.uns.long.running.jobs.predicate=${config.gdem.url}/jobs#long_running_jobs
# Event type predicate for UNS subscription method
env.uns.eventtype.predicate=${config.gdem.url}/jobs#event_type
# UNS event namespace
env.uns.events-namespace=${config.gdem.url}/events/
#Property for  uns url
env.uns.url=
#sendNotification method url
uns.sendNotification.method=/v2/uns/event/legacy/sendNotification/
#Credentials for uns rest api calls
uns.rest.username=
uns.rest.password=
# Predicate for alerts
env.uns.alerts.predicate=${config.gdem.url}/converters#alerts
# Event type predicate for alerts
env.uns.alerts.eventtype.predicate=${config.gdem.url}/alerts#event_type
# Channel name for alerts
env.uns.alerts.channel.name=

# TEST uns properties
test.uns.xml.rpc.server.url=http://test.tripledev.ee/uns/rpcrouter
test.uns.channel.name=987654321

#urls to filter http calls
env.xquery.http.endpoints=cr.eionet.europa.eu

#time limit that http requests take to execute through basex in ms
env.basex.xquery.timeLimit=10000

#max execution time of qa scripts in ms
env.schema.maxExecutionTime=82800000
#limit for max execution time of qa scripts in ms
env.schema.maxExecutionTimeLimit=82800000

#cr application url
config.cr.host=
#mock application to redirect cr requests
config.cr.mockCrUrl=
#if set to true calls to cr will be redirected to the mock cr application, if set to false calls to cr will proceed normally
config.enableXqueryCrCallsInterception=false

#rancher api url
env.rancher.api.url=
#username used for rancher api calls
env.rancher.api.accessKey=
#password used for rancher api calls
env.rancher.api.secretKey=
#jobExecutor imagUuid (used for creating service through rancher api)
env.rancher.api.jobExecutor.imageUuid=
#jobExecutor stack id (used for creating service through rancher api)
env.rancher.api.jobExecutor.stackId=
#jobExecutor service memory in bytes (used for creating service through rancher api)
env.rancher.api.jobExec.service.memory=
#jobExecutor service memory reservation in bytes (used for creating service through rancher api)
env.rancher.api.jobExec.service.memoryReservation=
#jobExecutor service scale number (used for creating service through rancher api)
env.rancher.api.jobExecutor.service.scale=
#light jobExecutor service's id to scale
env.rancher.api.light.jobExec.service.id=
#heavy jobExecutor service's id to scale
env.rancher.api.heavy.jobExec.service.id=
#synchronous fme jobExecutor service's id to scale
env.rancher.api.sync.fme.jobExec.service.id=
#asynchronous fme jobExecutor service's id to scale
env.rancher.api.async.fme.jobExec.service.id=
#property for enabling scheduled task that orchestrates creation/deletion of jobExecutor containers
env.enable.jobExecutor.rancher.scheduled.task=true
#maximum number of light JobExecutor containers to run on rancher
env.max.light.jobExecutor.containers.allowed=15
#maximum number of heavy JobExecutor containers to run on rancher
env.max.heavy.jobExecutor.containers.allowed=8
#maximum number of synchronous fme JobExecutor containers to run on rancher
env.max.sync.fme.jobExecutor.containers.allowed=4
#maximum number of asynchronous fme JobExecutor containers to run on rancher
env.max.async.fme.jobExecutor.containers.allowed=1

#rabbitmq connection properties
env.rabbitmq.host=
env.rabbitmq.port=
env.rabbitmq.username=
env.rabbitmq.password=
#Queue where converters sends script messages for workers to retrieve
env.rabbitmq.workers.jobs.queue=workers-jobs-queue
#Queue where workers respond with results after executing a script
env.rabbitmq.workers.jobs.results.queue=workers-jobs-results-queue
#Queue where workers send their status
env.rabbitmq.workers.status.queue=workers-status-queue
#Queue where worker responds whether it's executing a specific job
env.rabbitmq.worker.heartBeat.response.queue=worker-heart-beat-response-queue
#Exchange where converters sends message asking worker if it's executing a specific job
env.rabbitmq.xmlconv.heartBeat.request.exchange=xmlconv-heart-beat-request-exchange
#Exchange where converters sends messages
env.rabbitmq.main.xmlconv.jobs.exchange=main-xmlconv-jobs-exchange
#Exchange where workers send messages
env.rabbitmq.main.workers.exchange=main-workers-exchange
#Routing where converters sends job requests
env.rabbitmq.jobs.routingkey=xmlconv-job
#Routing where workers send job results
env.rabbitmq.jobs.results.routingkey=xmlconv-job-result
#Routing where workers send their status along with their heart beat queue name
env.rabbitmq.worker.status.routingkey=xmlconv-worker-status
#Routing where workers send responses for heart beat messages
env.rabbitmq.worker.heartBeat.response.routingKey=worker-heart-beat-response-routing

#RabbitMQ configuration for Heavy Workers
#Queue where converters sends script messages for heavy jobs in order to be received by a heavy worker
env.rabbitmq.heavy.workers.jobs.queue=workers-heavy-jobs-queue
#Exchange where converters sends messages to heavy workers
env.rabbitmq.main.xmlconv.heavy.jobs.exchange=main-xmlconv-heavy-jobs-exchange
#Routing where converters sends heavy job requests
env.rabbitmq.heavy.jobs.routingkey=xmlconv-job-heavy
#Queue where converters sends synchronous fme jobs
env.rabbitmq.workers.fme.sync.jobs.queue=workers-sync-fme-jobs-queue
#Exchange where converters sends synchronous fme jobs
env.rabbitmq.xmlconv.sync.fme.jobs.exchange=xmlconv-sync-fme-jobs-exchange
#Routing key where converters sends synchronous fme jobs
env.rabbitmq.sync.fme.jobs.routingkey=xmlconv-sync-fme-jobs-routingKey
#Queue where converters sends asynchronous fme jobs
env.rabbitmq.workers.fme.async.jobs.queue=workers-async-fme-jobs-queue
#Exchange where converters sends asynchronous fme jobs
env.rabbitmq.xmlconv.async.fme.jobs.exchange=xmlconv-async-fme-jobs-exchange
#Routing key where converters sends asynchronous fme jobs
env.rabbitmq.async.fme.jobs.routingkey=xmlconv-async-fme-jobs-routingKey

#time in milliseconds. Time limit in case of xmlrpc/rest runScript for a long running job. If this limit is exceeded we stop asking the job status
env.jobs.onDemand.limit.before.time.out=14400000
#time in milliseconds. Time limit in case of GUI Qa Sandbox runScript for a long running job. If this limit is exceeded we stop asking the job status
env.jobs.onDemand.ui.time.out=14400000

#Light Workers Dead Letter queue properties
env.rabbitmq.dead.letter.queue=workers-dead-letter-queue
env.rabbitmq.dead.letter.exchange=workers-dead-letter-exchange
env.rabbitmq.dead.letter.routingKey=workers-dead-letter-routing-key

#Health queue properties
env.rabbitmq.health.queue=xmlconv-health-queue
env.rabbitmq.health.exchange=xmlconv-health-exchange
env.rabbitmq.health.routingKey=xmlconv-health-routingKey

#Converters graylog url
env.converters.graylog=
#JobExecutor graylog url
env.jobExecutor.graylog=
#FME job url in FME server
env.fme.job.url=https://fme.discomap.eea.europa.eu/fmeserver/#/job/

#Maximum retries for heavy workers
env.max.heavy.retries=3

#fme url
env.fme.url=https://fme.discomap.eea.europa.eu/fmerest/v3/transformations/jobs
#fme user
env.fme.user=
#fme password
env.fme.password=
#fme token
env.fme.token=

#Url for retrieving container information
env.rancher.container.metadata.url=http://rancher-metadata/2015-12-19/self/container