# Folder, where other files and subfolders will be stored
app.home=/var/tmp/xmlconv

# Application host name
app.host=${docker.host.address}:${tomcat.port}

# Other applications urls
config.gdem.url=http://${docker.host.address}:${tomcat.port}
config.dd.url=http://dd.eionet.europa.eu
config.dd.rpc.url=http://dd.eionet.europa.eu/rpcrouter
config.cr.sparql.endpoint=http://cr.eionet.europa.eu/sparql
config.cdr.url=http://cdr.eionet.europa.eu

# Database parameters for integration testing
config.test.db.jdbcurl=jdbc:mysql://${docker.host.address}:${mysql.port}/xmlconv?autoReconnect=true&createDatabaseIfNotExist=true
config.test.db.driver=org.mariadb.jdbc.Driver
config.test.db.user=root
config.test.db.password=12345
# Local http server for integration testing
config.test.httpd.url=http://${docker.host.address}:${httpd.port}/

quartz.db.url=jdbc:mysql://${docker.host.address}:${mysql.port}/quartz?autoReconnect=true&createDatabaseIfNotExist=true
quartz.db.user=root
quartz.db.pwd=12345

basexserver.host=localhost
basexserver.port=1984
basexserver.user=admin
basexserver.password=admin

testbasexserver.host=localhost
testbasexserver.port=32774
testbasexserver.user=admin
testbasexserver.password=admin

config.cache.temp.dir=/var/tmp/cache
config.cache.http.expiryinterval=120
config.cache.http.size=2000

#JWT
jwt.secret=top-secret
jwt.issuer=issuer
jwt.audience=eea
jwt.header=Authorization
jwt.header.schema=Bearer


#Scheduler
config.heavy.threshold=10485760


# SSO Configuration
config.sso.url=http://ssoserver

#Threshold for long running jobs in ms
env.long.running.jobs.threshold=3600000

# UNS-related properties
#########################

# XML-RPC server URL for UNS subscription
env.uns.xml.rpc.server.url=http://uns.eionet.europa.eu/rpcrouter
#Channel name for UNS subscription method
env.uns.channel.name=123456789
# UNS subscriptions URL
env.uns.subscriptions.url=http://uns.eionet.europa.eu/subscriptions/subscriptions.jsf
# username for UNS subscriptions
env.uns.username=username
# password for UNS subscriptions
env.uns.password=password
# UNS xmlrpc function that is called for making subscription
env.uns.make.subsription.function=UNSService.makeSubscription
# UNS xmlrpc function that is called for sending notifications
env.uns.send.notification.function=UNSService.sendNotification
# If present and "true", this flag disables UNS event sending. In all other cases, sending is enabled.
# On Windows platform sending is disabled by default, unless this property is present and explicitly set to "false".
env.uns.isDisabled=${env.uns.isDisabled}

# Predicate for long running jobs
env.uns.long.running.jobs.predicate=${config.gdem.url}/jobs#long_running_jobs
# Event type predicate for UNS subscription method
env.uns.eventtype.predicate=${config.gdem.url}/jobs#event_type
# UNS event namespace
env.uns.events-namespace=${config.gdem.url}/events/



# TEST uns properties
test.uns.xml.rpc.server.url=http://test.tripledev.ee/uns/rpcrouter
test.uns.channel.name=987654321

#urls to filter http calls
env.xquery.http.endpoints=cr.eionet.europa.eu

#time limit that http requests take to execute through basex in ms
env.basex.xquery.timeLimit=10000

#max execution time of qa scripts in ms
env.schema.maxExecutionTime=36000000

config.cr.host=

config.cr.mockCrUrl=

config.enableXqueryCrCallsInterception=false

#RabbitMQ configuration
env.rabbitmq.host=
env.rabbitmq.port=
env.rabbitmq.username=
env.rabbitmq.password=
env.rabbitmq.workers.jobs.queue=workers-jobs-queue
env.rabbitmq.workers.jobs.results.queue=workers-jobs-results-queue
env.rabbitmq.workers.status.queue=workers-status-queue
env.rabbitmq.worker.heartBeat.response.queue=worker-heart-beat-response-queue
env.rabbitmq.xmlconv.heartBeat.request.exchange=xmlconv-heart-beat-request-exchange
env.rabbitmq.main.xmlconv.jobs.exchange=main-xmlconv-jobs-exchange
env.rabbitmq.main.workers.exchange=main-workers-exchange
env.rabbitmq.jobs.routingkey=xmlconv-job
env.rabbitmq.jobs.results.routingkey=xmlconv-job-result
env.rabbitmq.worker.status.routingkey=xmlconv-worker-status
env.rabbitmq.worker.heartBeat.response.routingKey=worker-heart-beat-response-routing

env.rancher.api.url=rancherUrl
env.rancher.api.jobExecutor.stackId=stackId
env.rancher.api.jobExecutor.imageUuid=image
env.rancher.api.jobExecutor.service.scale=1
env.rancher.api.service.memory=209715200
env.rancher.api.service.memoryReservation=104857600

#username used for rancher api calls
env.rancher.api.accessKey=
#password used for rancher api calls
env.rancher.api.secretKey=

#Dead Letter queue properties
env.rabbitmq.dead.letter.queue=workers-dead-letter-queue
env.rabbitmq.dead.letter.exchange=workers-dead-letter-exchange
env.rabbitmq.dead.letter.routingKey=workers-dead-letter-routing-key

env.enable.jobExecutor.rancher.scheduled.task=false